AWSTemplateFormatVersion: "2010-09-09"
Description: Yet Analytics rds-db-init deployment bucket. You do not need to run this to use rds-db-init, as it is public.

Parameters:
  GitHubOrg:
    Type: String
    Description: GitHub Organization Name
    Default: yetanalytics
  RepositoryName:
    Type: String
    Description: GitHub Repository Name
    Default: rds-db-init
  OIDCProviderArn:
    Description: Arn for the GitHub OIDC Provider.
    Default: ""
    Type: String
  BucketName:
    Description: Name of the S3 bucket to create.
    Type: String
    Default: yet-rds-db-init-deploy-us-east-1
  ReplicaBucket0:
    Description: Name of the first replica bucket.
    Type: String
    Default: yet-rds-db-init-deploy-us-west-1
  ReplicaBucket1:
    Description: Name of the second replica bucket.
    Type: String
    Default: yet-rds-db-init-deploy-us-east-2
  ReplicaBucket2:
    Description: Name of the third replica bucket.
    Type: String
    Default: yet-rds-db-init-deploy-us-west-2

Resources:
  HostingBucketReplicationRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - s3.amazonaws.com
  HostingBucketReplicationPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: RdsDbInitHostingReplicationPolicy
      PolicyDocument:
        Statement:
          # Source
          - Effect: Allow
            Action:
              - 's3:GetReplicationConfiguration'
              - 's3:ListBucket'
            Resource:
              - !GetAtt HostingBucket.Arn
          - Effect: Allow
            Action:
              - 's3:GetObjectVersionForReplication'
              - 's3:GetObjectVersionAcl'
              - 's3:GetObjectVersionTagging'
            Resource:
              - !Sub "${HostingBucket.Arn}/*"
          # Destinations
          - Action:
              - 's3:ReplicateObject'
              - 's3:ReplicateDelete'
              - 's3:GetObjectVersionTagging'
              - 's3:ReplicateTags'
            Effect: Allow
            Resource:
              - !Sub "arn:aws:s3:::${ReplicaBucket0}/*"
              - !Sub "arn:aws:s3:::${ReplicaBucket1}/*"
              - !Sub "arn:aws:s3:::${ReplicaBucket2}/*"
      Roles:
        - !Ref HostingBucketReplicationRole

  HostingBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      VersioningConfiguration:
        Status: Enabled
      ReplicationConfiguration:
        Role: !GetAtt HostingBucketReplicationRole.Arn
        Rules:
          - Id: !Sub "replicate-to-${ReplicaBucket0}"
            Status: Enabled
            DeleteMarkerReplication:
              Status: Enabled
            Priority: 1
            Filter:
              Prefix: ''
            Destination:
              Bucket: !Sub "arn:aws:s3:::${ReplicaBucket0}"
          - Id: !Sub "replicate-to-${ReplicaBucket1}"
            Status: Enabled
            DeleteMarkerReplication:
              Status: Enabled
            Priority: 2
            Filter:
              Prefix: ''
            Destination:
              Bucket: !Sub "arn:aws:s3:::${ReplicaBucket1}"
          - Id: !Sub "replicate-to-${ReplicaBucket2}"
            Status: Enabled
            DeleteMarkerReplication:
              Status: Enabled
            Priority: 3
            Filter:
              Prefix: ''
            Destination:
              Bucket: !Sub "arn:aws:s3:::${ReplicaBucket2}"
  HostingBucketPublicReadPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref HostingBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "s3:GetObject"
            Resource:
              - !Sub "${HostingBucket.Arn}/*"
            Principal: "*"

  BucketWritePolicy:
    Type: AWS::IAM::ManagedPolicy
    Description: IAM Policy to allow write to the rds-db-init Function hosting bucket
    Properties:
      ManagedPolicyName: !Sub "${AWS::StackName}-${AWS::Region}-lrsql-dbfn-bucket-write-policy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "s3:PutObject"
            Resource:
              - !Sub "${HostingBucket.Arn}/*"

  BucketWriteRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !Ref OIDCProviderArn
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: sts.amazonaws.com
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub repo:${GitHubOrg}/${RepositoryName}:*
      ManagedPolicyArns:
        - !Ref BucketWritePolicy

Outputs:
  BucketWriteRoleArn:
    Value: !GetAtt BucketWriteRole.Arn
